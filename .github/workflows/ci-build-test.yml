name: "CI: Build & Test"

on:
  workflow_call:
    secrets:
      SNYK_TOKEN:
        required: true
      YTTOKEN:
        required: true
  workflow_dispatch:

env:
  UPSTREAM_GITHUB_REPOSITORY: "mxpv/podsync"                         # Upstream repo

jobs:
  quick-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.0.2
      -
        name: Get current version
        id: get_version
        run: |
          version=$(curl --silent https://api.github.com/repos/${GITHUB_REPOSITORY}/git/refs/tags | jq -r '.[-1].ref' | awk -F/ '{print $NF}')
          if [[ $version =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            version="v${version}"
          fi
          echo "::debug::get current version ${version}"
          echo "::set-output name=version::${version}"
      -
        name: Generate Build-Args
        id: build-args
        run: |
          echo ${{ steps.prep.outputs.imagename }}
          echo ::set-output name=build-arg1::"UPSTREAM_VERSION=${{ steps.get_version.outputs.version }}"
          # echo ::set-output name=build-arg2::"buildarg2"
      -
        name: Prepare
        id: prep
        run: |
          IMAGENAME="ttl.sh/$(uuidgen | tr '[:upper:]' '[:lower:]'):3h"
          echo ::set-output name=imagename::${IMAGENAME}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and export
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.imagename }}
          build-args: |
            ${{ steps.build-args.outputs.build-arg1 }}
            ${{ steps.build-args.outputs.build-arg2 }}

  snyk-scan:
    needs: [quick-build]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.0.2
      -
        name: Prepare
        id: prep
        run: |
          IMAGENAME="ttl.sh/$(uuidgen | tr '[:upper:]' '[:lower:]'):3h"
          echo ::set-output name=imagename::${IMAGENAME}
      -
        name: Pull docker image
        id: load
        run: |
          docker pull ${{ steps.prep.outputs.imagename }}
      -
        name: Test the image with Snyk for high-severity vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ steps.prep.outputs.imagename }}
          args: --file=Dockerfile --severity-threshold=high

  function-test:
    needs: [quick-build]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.0.2
      -
        name: Prepare
        id: prep
        run: |
          IMAGENAME="ttl.sh/$(uuidgen | tr '[:upper:]' '[:lower:]'):3h"
          echo ::set-output name=imagename::${IMAGENAME}
      -
        name: Pull docker image
        id: load
        run: |
          docker pull ${{ steps.prep.outputs.imagename }}
      -
        name: Test docker image
        id: test
        env:
          YTTOKEN : ${{secrets.YTTOKEN}}
          TESTIMAGE: "${{ steps.prep.outputs.imagename }}"
        shell: bash
        run: |
          test/test.sh
